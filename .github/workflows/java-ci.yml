name: Java CI/CD Pipeline

# Trigger on push to main branch and on pull request
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Checkout code
    - name: Checkout code
      uses: actions/checkout@v3

    # Step 2: Set up JDK
    # - name: Set up JDK 17
     #  uses: actions/setup-java@v3
     #  with:
      #   java-version: '17'
      #   distribution: 'temurin'  # OpenJDK distribution

    # Step 3: Cache Maven dependencies
     #- name: Cache Maven dependencies
      # uses: actions/cache@v3
      # with:
       #  path: ~/.m2/repository
        # key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        # restore-keys: |
         #  ${{ runner.os }}-maven-

    # Step 4: Build with Maven (Compile and Package)
     #- name: Build with Maven
      # run: mvn -B package --file pom.xml

    # Step 5: Run Tests
     #- name: Run Tests
     #  run: mvn test

    # Step 6: Code Quality - Checkstyle (or other static analysis)
     #- name: Run Checkstyle
      # run: mvn checkstyle:check

    # Step 7: Upload artifacts (e.g., JAR files)
     #- name: Upload Build Artifact
      # uses: actions/upload-artifact@v3
       #with:
        # name: MyApp-jar
         #path: target/*.jar
 
    # Optional Step: Deploy (if you want to deploy to a server, cloud, etc.)
  #   - name: Deploy to Server
   #    if: github.ref == 'refs/heads/main' && github.formatRef == 'refs/heads/main'
    #   env:
     #    DEPLOYMENT_KEY: ${{ secrets.DEPLOYMENT_KEY }}
    #   run: |
     #    # Command to deploy your app, e.g., SCP, SSH, or cloud CLI
      #   echo "Deploying application..."
        # Example: scp target/myapp.jar user@yourserver:/deploy/path